-- WHAT ABOUT THE PARTIAL SEARCH
-- WE USE LKE AND % (WILD CARD)
-- % can represent 0 or more character of any kind
-- _ can represent exactly one character of any kind

/*
        'D%' -- anything that starts with D
            David, Danny, Dog

        '%d' -- anything that end with d
            Sid, Bid, Kid, Dad

        '%d%' -- anything that contains with d

            Aladdin, Cassandra, Adam, Brandon.
            Sid, Bid, Kid ,Dad
            david, danny, dog

        'D%a' -- anything that starts with D and end with a
            Diana, Donna, Damla, Daria

        'S%e%n' -- any start with S end with n
                -- and has e somewhere in the middle
                Steven, Stephen, Selen, Serkan, Sebastian

        'T_'   -- Starts with T and followed by exactly one character of any kind
                Tj, TD, Ta, T!, TV, T2

        '_a_' -- Starts with any character, followed by a and
                    followed by any one character
                Dad, Man, Fat, Gap, Mad

 */


-- Shows employees first name with name starts with D a
SELECT FIRST_NAME
FROM EMPLOYEES WHERE FIRST_NAME LIKE 'Da%';

SELECT FIRST_NAME
FROM EMPLOYEES WHERE FIRST_NAME LIKE 'Da%d';

SELECT FIRST_NAME FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'St%';

SELECT LAST_NAME FROM EMPLOYEES
WHERE LAST_NAME LIKE 'B%r';


SELECT FIRST_NAME FROM EMPLOYEES
WHERE FIRST_NAME LIKE '_a_';

SELECT PHONE_NUMBER FROM EMPLOYEES
WHERE PHONE_NUMBER LIKE '515%';

SELECT PHONE_NUMBER FROM EMPLOYEES
WHERE PHONE_NUMBER LIKE '%.121.%';

-- YOU CAN OPTIONALLY GIVE A ALIAS FOR YOUR COLUMN
-- Display all FIRST_NAME, SALARY IN EMPLOYEE TABLE
-- Modify the column name for Salary in result to money

SELECT FIRST_NAME, SALARY AS MONEY
FROM EMPLOYEES;

-- Display all First_Name, Last_Name in Employees Table
-- Modify The column name for AS BELOW
-- FIRST_NAME -> GIVEN_NAME  LAST_NAME -> FAMILY_NAME

SELECT FIRST_NAME AS GIVEN_NAME, LAST_NAME AS FAMILY_NAME
FROM EMPLOYEES;

-- CONCATENATION IN SQL USE ||

SELECT FIRST_NAME, LAST_NAME,
       FIRST_NAME || ' ' || LAST_NAME AS "FULL_NAME" -- CONCATENATE FULL NAME
FROM EMPLOYEES;

-- ARITHMETIC OPERATION : + - * /
-- Display EMPLOYEE NAME AND SALARY
-- INCREASED_SALARY AFTER $5000 RAISE
-- DECREASED_SALARY AFTER $2000 CUT
-- YEARLY_SALARY (*12)
-- WEEKLY_SALARY (/4)
SELECT FIRST_NAME, SALARY,
       SALARY + 5000 AS "INCREASED_SALARY"
FROM EMPLOYEES;

SELECT FIRST_NAME, SALARY,
       SALARY - 2000 AS "DECREASED_ SALARY"
FROM EMPLOYEES;

SELECT FIRST_NAME, SALARY,
       SALARY * 12 AS "YEARLY_SALARY"
FROM EMPLOYEES;

SELECT FIRST_NAME, SALARY,
       SALARY / 4 AS "WEEKLY_SALARY"
FROM EMPLOYEES;

--- SQL BUILT-IN FUCTIONS:
--- REUSABLE CODE THAT WRAPPED INTO FUNCTION FOR COMMON TASKS
-- LIKE ROUNDING NUMBERS, GETTING LENGTH OF STR AND MORE
-- SINGLE ROW FUNCTION:
        -- IT AFFECT EACH AND EVERY ROW AND RETURN SAME NUMBER OF ROW

        -- FEW TEXT FUNCTIONS:
        -- UPPER : ACCEPT ONE PARAMETER (COLUMN NAME) AND RETURN UPPERCASE
        -- LOWER : ACCEPT ONE PARAMETER (COLUMN NAME) AND RETURN LOWERCASE
        -- LENGTH: RETURN THE LENGTH OF STRING

        -- Display FIRST_NAME , and UPPERCASE FIRST_NAME IN EMPLOYEE TABLE



SELECT  FIRST_NAME,
        LOWER(FIRST_NAME) AS "LOWERCASE_NAME",
        LENGTH(FIRST_NAME) AS "CHAR_COUNT",
        UPPER(FIRST_NAME) AS "UPPERCASE_NAME"
FROM EMPLOYEES;


--- FIND OUT ALL FIRST_NAME AND CHARACTER COUNT
--- ONLY DISPLAY IF CHARACTER COUNT IS EXACTLY 5

SELECT FIRST_NAME , LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) = 5;


-- ONLY DISPLAY IF FIRST NAME CHARACTER COUNT IS MORE THAN 10
SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) > 10;

-- ONLY DISPLAY IF FIRST NAME CHARACTER COUNT IS BETWEEN 7-9
SELECT FIRST_NAME , LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) BETWEEN 7 AND 9;


-- ONLY DISPLAY IF FIRST NAME CHARACTER COUNT IS NOT BETWEEN 5-10
SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) NOT BETWEEN 5 AND 10;


-- ONLY DISPLAY IF FIRST NAME CHARACTER COUNT IS 2 OR 9 OR 13
SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) IN (2,9,13);

-- FIND OUT ALL FIRST_NAME THAT CONTAINS d or D
SELECT FIRST_NAME
FROM EMPLOYEES
-- WHERE FIRST_NAME LIKE '%d%' OR FIRST_NAME LIKE '%D%';
WHERE UPPER(FIRST_NAME) LIKE '%D%';


-- DISPLAY IN ALPHABETICAL ORDER
SELECT FIRST_NAME
FROM EMPLOYEES
ORDER BY FIRST_NAME;

-- SORT BY LOWEST CHARACTER COUNT
SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
ORDER BY LENGTH(FIRST_NAME) ;

-- SORT BY HIGHEST CHARACTER COUNT
SELECT FIRST_NAME
FROM EMPLOYEES
ORDER BY LENGTH(FIRST_NAME) DESC;




-- NUMBER FUNCTION:
-- ROUND (DECIMAL NUMBER HERE) --> ROUNDED NUMBER
--- ROUND (DECIMAL NUMBER HERE, DIGIT YOU WANNA KEEP) -->> ROUNDED NUMBER WITH DESIRED DIGIT

SELECT SALARY,
       ROUND( SALARY / 30) AS "DAILY_SALARY",
       ROUND( SALARY / 30 , 3) -- keeps 3 digits after the decimal
FROM EMPLOYEES;


-- MULTI ROW FUNCTIONS  | GROUP FUNCTIONS | AGGREGATE FUNCTIONS
-- COUNT, MAX, MIN, SUM, AVG

-- COUNTS ALL FROM EMPLOYEES
SELECT COUNT(*)
FROM EMPLOYEES;

SELECT COUNT(COMMISSION_PCT)
FROM EMPLOYEES;

-- GET THE EMPLOYEE COUNT FOR EMPLOYEES WITH DEPARTMENT ID 90

SELECT COUNT(*)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90;


-- MAX
SELECT MAX(SALARY)
FROM EMPLOYEES;

-- FIND OUT THE MAX SALARY IN EMPLOYEES TABLE
-- EXCLUDE THE SALARY 24000

SELECT SALARY
FROM EMPLOYEES
WHERE SALARY <> 24000
ORDER BY SALARY;

-- MIN
-- FIND OUT MINIMUM SALARY IN EMPLOYEES TABLE

SELECT MIN(SALARY)
FROM EMPLOYEES;

-- EXCLUDE THE SALARY 2100
SELECT MIN(SALARY)
FROM EMPLOYEES
WHERE SALARY <> 2100;


-- SUM
-- GET SUM OF THE ENTIRE EMPLOYEES SALARY

SELECT SUM(SALARY)
FROM EMPLOYEES;






















